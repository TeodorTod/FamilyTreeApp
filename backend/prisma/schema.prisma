// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String         @id @default(uuid())
  email       String         @unique
  password    String?
  displayName String?
  picture     String?
  provider    String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime?      @updatedAt

  familyMembers FamilyMember[]
}

model FamilyMember {
  id         String    @id @default(uuid())
  userId     String
  firstName  String
  middleName String?
  lastName   String
  gender     String
  dob        DateTime
  dod        DateTime?
  isAlive    Boolean   @default(true)
  photoUrl   String?
  biography  String?  
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  role       String   

  user       User      @relation(fields: [userId], references: [id])
  parentOf   Relationship[] @relation("ParentChildFrom")
  childOf    Relationship[] @relation("ParentChildTo")
  media      Media[]
}

model Relationship {
  id            String         @id @default(uuid())
  fromMemberId  String
  toMemberId    String
  type          String         

  fromMember    FamilyMember   @relation("ParentChildFrom", fields: [fromMemberId], references: [id])
  toMember      FamilyMember   @relation("ParentChildTo", fields: [toMemberId], references: [id])
}

model Media {
  id        String   @id @default(uuid())
  memberId  String
  url       String
  type      String 
  caption   String?
  uploadedAt DateTime @default(now())

  member    FamilyMember @relation(fields: [memberId], references: [id])
}
